distinguished_name = boilerplate

[ boilerplate ]

[ etcd_client ]
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer

basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = critical, clientAuth

[ etcd_member ]
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid:always,issuer

basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
extendedKeyUsage = critical, clientAuth, serverAuth

[ etcd_ca ]
subjectKeyIdentifier=hash

basicConstraints = critical, CA:TRUE, pathlen:0
keyUsage = critical, keyCertSign

# [alt_names]
# DNS.1 = localhost
# {% for host in groups['etcd'] %}
# {% if hostvars[host]['etcd_access_address'] is defined and not (hostvars[host]['etcd_access_address'] | ansible.utils.ipaddr) %}
# {# If defined, the address which etcd uses to access its members must be included in the SAN, otherwise etcd will fail with a TLS error upon startup. #}
# DNS.{{ counter["dns"] }} = {{ hostvars[host]['etcd_access_address'] }}{{ increment(counter, 'dns') }}
# {% endif %}
# {# This will always expand to inventory_hostname, which can be a completely arbitrary name, that etcd will not know or care about, hence this line is (probably) redundant. #}
# DNS.{{ counter["dns"] }} = {{ host }}{{ increment(counter, 'dns') }}
# {% endfor %}
# {% if apiserver_loadbalancer_domain_name is defined %}
# DNS.{{ counter["dns"] }} = {{ apiserver_loadbalancer_domain_name }}{{ increment(counter, 'dns') }}
# {% endif %}
# {% for etcd_alt_name in etcd_cert_alt_names %}
# DNS.{{ counter["dns"] }} = {{ etcd_alt_name }}{{ increment(counter, 'dns') }}
# {% endfor %}
# {% for host in groups['etcd'] %}
# {% if hostvars[host]['access_ip'] is defined  %}
# IP.{{ counter["ip"] }} = {{ hostvars[host]['access_ip'] }}{{ increment(counter, 'ip') }}
# {% endif %}
# {% if hostvars[host]['access_ip6'] is defined  %}
# IP.{{ counter["ip"] }} = {{ hostvars[host]['access_ip6'] }}{{ increment(counter, 'ip') }}
# {% endif %}
# {% if ipv6_stack  %}
# IP.{{ counter["ip"] }} = {{ hostvars[host]['ip6'] | default(hostvars[host]['fallback_ip6']) }}{{ increment(counter, 'ip') }}
# {% endif %}
# IP.{{ counter["ip"] }} = {{ hostvars[host]['main_ip'] }}{{ increment(counter, 'ip') }}
# {% endfor %}
# {% for cert_alt_ip in etcd_cert_alt_ips %}
# IP.{{ counter["ip"] }} = {{ cert_alt_ip }}{{ increment(counter, 'ip') }}
# {% endfor %}
# IP.{{ counter["ip"] }} = 127.0.0.1{{ increment(counter, 'ip') }}
# IP.{{ counter["ip"] }} = ::1
